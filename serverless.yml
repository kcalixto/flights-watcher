service: flights-watcher

frameworkVersion: "3"

custom:
  tableName: flights-watcher-db

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  stage: ${opt:stage, 'prd'}
  region: sa-east-1
  versionFunctions: false
  timeout: 30
  memorySize: 128
  logRetentionInDays: 30
  deploymentBucket:
    name: kcalixto-serverless-framework

  environment:
    TABLE_NAME: ${self:custom.tableName}
    API_KEY: ${ssm:/flights-watcher/api-key}
    MAIL_FROM: ${ssm:/flights-watcher/mail-from}
    MAIL_TO_LIST: ${ssm:/flights-watcher/mail-to}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - ses:SendEmail
          Resource: "*"

package:
  individually: true
  patterns:
    - "!./**"
    - ./bin/**

functions:
  api:
    handler: bootstrap
    package:
      artifact: bin/api.zip
    events:
      # todo dia as 4h, 18h e 22h
      - schedule: 
          rate: cron(0 4 * * ? *)
          input:
            body: '{"lookup_date": { "outbound_date": "2025-07-11", "return_date": "2025-07-29", "salty_days": 0 }, "departure_id": "CGH" }'
      - schedule: 
          rate: cron(0 18 * * ? *)
          input:
            body: '{"lookup_date": { "outbound_date": "2025-07-12", "return_date": "2025-07-28", "salty_days": 1 }, "departure_id": "CGH" }'
      - schedule: 
          rate: cron(0 22 * * ? *)
          input:
            body: '{"lookup_date": { "outbound_date": "2025-07-11", "return_date": "2025-07-29", "salty_days": 0 }, "departure_id": "GRU" }'

resources:
  - Resources:
      DynamoDBTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:custom.tableName}
          BillingMode: PAY_PER_REQUEST
          AttributeDefinitions:
            - AttributeName: pk
              AttributeType: S
            - AttributeName: sk
              AttributeType: S
          KeySchema:
            - AttributeName: pk
              KeyType: HASH
            - AttributeName: sk
              KeyType: RANGE
          # TimeToLiveSpecification:
          #   AttributeName: expires_at
          #   Enabled: true
          GlobalSecondaryIndexes:
            - IndexName: sk-index
              KeySchema:
                - AttributeName: sk
                  KeyType: HASH
                - AttributeName: pk
                  KeyType: RANGE
              Projection:
                ProjectionType: ALL
